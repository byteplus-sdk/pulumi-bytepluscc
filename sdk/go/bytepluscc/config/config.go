// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/byteplus-sdk/pulumi-bytepluscc/sdk/go/bytepluscc/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

var _ = internal.GetEnvOrDefault

// The Access Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_ACCESS_KEY`
// environment variable
func GetAccessKey(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "bytepluscc:accessKey")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "BYTEPLUS_ACCESS_KEY"); d != nil {
		value = d.(string)
	}
	return value
}

// An `assumeRole` block (documented below). Only one `assumeRole` block may be in the configuration.
func GetAssumeRole(ctx *pulumi.Context) string {
	return config.Get(ctx, "bytepluscc:assumeRole")
}

// CUSTOMER HEADERS for Byteplus Provider. The customerHeaders field uses commas (,) to separate multiple headers, and
// colons (:) to separate each header key from its corresponding value.
func GetCustomerHeaders(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "bytepluscc:customerHeaders")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "BYTEPLUS_CUSTOMER_HEADERS"); d != nil {
		value = d.(string)
	}
	return value
}

// Disable SSL for Byteplus Provider
func GetDisableSsl(ctx *pulumi.Context) bool {
	v, err := config.TryBool(ctx, "bytepluscc:disableSsl")
	if err == nil {
		return v
	}
	var value bool
	if d := internal.GetEnvOrDefault(nil, internal.ParseEnvBool, "BYTEPLUS_DISABLE_SSL"); d != nil {
		value = d.(bool)
	}
	return value
}

// An `endpoints` block (documented below). Only one `endpoints` block may be in the configuration.
func GetEndpoints(ctx *pulumi.Context) string {
	return config.Get(ctx, "bytepluscc:endpoints")
}

// PROXY URL for Byteplus Provider
func GetProxyUrl(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "bytepluscc:proxyUrl")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "BYTEPLUS_PROXY_URL"); d != nil {
		value = d.(string)
	}
	return value
}

// The Region for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_REGION` environment
// variable
func GetRegion(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "bytepluscc:region")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "BYTEPLUS_REGION"); d != nil {
		value = d.(string)
	}
	return value
}

// he Secret Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_SECRET_KEY`
// environment variable
func GetSecretKey(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "bytepluscc:secretKey")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "BYTEPLUS_SECRET_KEY"); d != nil {
		value = d.(string)
	}
	return value
}
