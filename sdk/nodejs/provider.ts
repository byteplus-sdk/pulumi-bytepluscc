// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The provider type for the bytepluscc package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'bytepluscc';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * The Access Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_ACCESS_KEY`
     * environment variable
     */
    public readonly accessKey!: pulumi.Output<string | undefined>;
    /**
     * CUSTOMER HEADERS for Byteplus Provider. The customerHeaders field uses commas (,) to separate multiple headers, and
     * colons (:) to separate each header key from its corresponding value.
     */
    public readonly customerHeaders!: pulumi.Output<string | undefined>;
    /**
     * PROXY URL for Byteplus Provider
     */
    public readonly proxyUrl!: pulumi.Output<string | undefined>;
    /**
     * The Region for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_REGION` environment
     * variable
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * he Secret Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_SECRET_KEY`
     * environment variable
     */
    public readonly secretKey!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["accessKey"] = (args ? args.accessKey : undefined) ?? utilities.getEnv("BYTEPLUS_ACCESS_KEY");
            resourceInputs["assumeRole"] = pulumi.output(args ? args.assumeRole : undefined).apply(JSON.stringify);
            resourceInputs["customerHeaders"] = (args ? args.customerHeaders : undefined) ?? utilities.getEnv("BYTEPLUS_CUSTOMER_HEADERS");
            resourceInputs["disableSsl"] = pulumi.output((args ? args.disableSsl : undefined) ?? utilities.getEnvBoolean("BYTEPLUS_DISABLE_SSL")).apply(JSON.stringify);
            resourceInputs["endpoints"] = pulumi.output(args ? args.endpoints : undefined).apply(JSON.stringify);
            resourceInputs["proxyUrl"] = (args ? args.proxyUrl : undefined) ?? utilities.getEnv("BYTEPLUS_PROXY_URL");
            resourceInputs["region"] = (args ? args.region : undefined) ?? utilities.getEnv("BYTEPLUS_REGION");
            resourceInputs["secretKey"] = (args ? args.secretKey : undefined) ?? utilities.getEnv("BYTEPLUS_SECRET_KEY");
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }

    /**
     * This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
     */
    terraformConfig(): pulumi.Output<Provider.TerraformConfigResult> {
        return pulumi.runtime.call("pulumi:providers:bytepluscc/terraformConfig", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * The Access Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_ACCESS_KEY`
     * environment variable
     */
    accessKey?: pulumi.Input<string>;
    /**
     * An `assumeRole` block (documented below). Only one `assumeRole` block may be in the configuration.
     */
    assumeRole?: pulumi.Input<inputs.ProviderAssumeRole>;
    /**
     * CUSTOMER HEADERS for Byteplus Provider. The customerHeaders field uses commas (,) to separate multiple headers, and
     * colons (:) to separate each header key from its corresponding value.
     */
    customerHeaders?: pulumi.Input<string>;
    /**
     * Disable SSL for Byteplus Provider
     */
    disableSsl?: pulumi.Input<boolean>;
    /**
     * An `endpoints` block (documented below). Only one `endpoints` block may be in the configuration.
     */
    endpoints?: pulumi.Input<inputs.ProviderEndpoints>;
    /**
     * PROXY URL for Byteplus Provider
     */
    proxyUrl?: pulumi.Input<string>;
    /**
     * The Region for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_REGION` environment
     * variable
     */
    region?: pulumi.Input<string>;
    /**
     * he Secret Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_SECRET_KEY`
     * environment variable
     */
    secretKey?: pulumi.Input<string>;
}

export namespace Provider {
    /**
     * The results of the Provider.terraformConfig method.
     */
    export interface TerraformConfigResult {
        readonly result: {[key: string]: any};
    }

}
