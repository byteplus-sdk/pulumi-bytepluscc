// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Byteplus.Pulumi.Bytepluscc
{
    /// <summary>
    /// The provider type for the bytepluscc package. By default, resources use package-wide configuration
    /// settings, however an explicit `Provider` instance may be created and passed during resource
    /// construction to achieve fine-grained programmatic control over provider settings. See the
    /// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
    /// </summary>
    [ByteplusccResourceType("pulumi:providers:bytepluscc")]
    public partial class Provider : global::Pulumi.ProviderResource
    {
        /// <summary>
        /// The Access Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_ACCESS_KEY`
        /// environment variable
        /// </summary>
        [Output("accessKey")]
        public Output<string?> AccessKey { get; private set; } = null!;

        /// <summary>
        /// CUSTOMER HEADERS for Byteplus Provider. The customer_headers field uses commas (,) to separate multiple headers, and
        /// colons (:) to separate each header key from its corresponding value.
        /// </summary>
        [Output("customerHeaders")]
        public Output<string?> CustomerHeaders { get; private set; } = null!;

        /// <summary>
        /// PROXY URL for Byteplus Provider
        /// </summary>
        [Output("proxyUrl")]
        public Output<string?> ProxyUrl { get; private set; } = null!;

        /// <summary>
        /// The Region for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_REGION` environment
        /// variable
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// he Secret Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_SECRET_KEY`
        /// environment variable
        /// </summary>
        [Output("secretKey")]
        public Output<string?> SecretKey { get; private set; } = null!;


        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs? args = null, CustomResourceOptions? options = null)
            : base("bytepluscc", name, args ?? new ProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/byteplus-sdk",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }

        /// <summary>
        /// This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
        /// </summary>
        public global::Pulumi.Output<ProviderTerraformConfigResult> TerraformConfig()
            => global::Pulumi.Deployment.Instance.Call<ProviderTerraformConfigResult>("pulumi:providers:bytepluscc/terraformConfig", CallArgs.Empty, this);
    }

    public sealed class ProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Access Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_ACCESS_KEY`
        /// environment variable
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// An `assume_role` block (documented below). Only one `assume_role` block may be in the configuration.
        /// </summary>
        [Input("assumeRole", json: true)]
        public Input<Inputs.ProviderAssumeRoleArgs>? AssumeRole { get; set; }

        /// <summary>
        /// CUSTOMER HEADERS for Byteplus Provider. The customer_headers field uses commas (,) to separate multiple headers, and
        /// colons (:) to separate each header key from its corresponding value.
        /// </summary>
        [Input("customerHeaders")]
        public Input<string>? CustomerHeaders { get; set; }

        /// <summary>
        /// Disable SSL for Byteplus Provider
        /// </summary>
        [Input("disableSsl", json: true)]
        public Input<bool>? DisableSsl { get; set; }

        /// <summary>
        /// An `endpoints` block (documented below). Only one `endpoints` block may be in the configuration.
        /// </summary>
        [Input("endpoints", json: true)]
        public Input<Inputs.ProviderEndpointsArgs>? Endpoints { get; set; }

        /// <summary>
        /// PROXY URL for Byteplus Provider
        /// </summary>
        [Input("proxyUrl")]
        public Input<string>? ProxyUrl { get; set; }

        /// <summary>
        /// The Region for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_REGION` environment
        /// variable
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// he Secret Key for Byteplus Provider. It must be provided, but it can also be sourced from the `BYTEPLUS_SECRET_KEY`
        /// environment variable
        /// </summary>
        [Input("secretKey")]
        public Input<string>? SecretKey { get; set; }

        public ProviderArgs()
        {
            AccessKey = Utilities.GetEnv("BYTEPLUS_ACCESS_KEY");
            CustomerHeaders = Utilities.GetEnv("BYTEPLUS_CUSTOMER_HEADERS");
            DisableSsl = Utilities.GetEnvBoolean("BYTEPLUS_DISABLE_SSL");
            ProxyUrl = Utilities.GetEnv("BYTEPLUS_PROXY_URL");
            Region = Utilities.GetEnv("BYTEPLUS_REGION");
            SecretKey = Utilities.GetEnv("BYTEPLUS_SECRET_KEY");
        }
        public static new ProviderArgs Empty => new ProviderArgs();
    }

    /// <summary>
    /// The results of the <see cref="Provider.TerraformConfig"/> method.
    /// </summary>
    [OutputType]
    public sealed class ProviderTerraformConfigResult
    {
        public readonly ImmutableDictionary<string, object> Result;

        [OutputConstructor]
        private ProviderTerraformConfigResult(ImmutableDictionary<string, object> result)
        {
            Result = result;
        }
    }
}
